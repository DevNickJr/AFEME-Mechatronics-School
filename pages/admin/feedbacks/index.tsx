import { useEffect, useState } from 'react'
import Head from "next/head";
import AdminLayout from "@/layouts/AdminLayout"
import AuthHOC from '@/components/AuthHOC'
import Table from '@/components/Table'
import { IFeedback } from "@/interfaces"
import usePost from '@/hooks/usePost';
import { toast } from 'react-toastify';
import Loader from '@/components/Loader';
import { BsReply } from 'react-icons/bs';
import { MdOutlineDelete } from 'react-icons/md';
import { useRouter } from 'next/router';

const Feedbacks = () => {
  const [data, setData] = useState<IFeedback[]>([])
  const [loading, setLoading] = useState(false)
  const [modalOpen, setModalOpen] = useState(false)

  const router = useRouter()

  const { loading: posting, error, post, data: deleted } = usePost({ 
    api: "/feedbacks",
    method: "DELETE",
    onSuccess: () => {
        toast('Feedbacks deleted successfully')
    } 
})

const deleteFeedbacks = (id: string, route: string) => {
    post({
      id,
    }, route)
}


const columns = [
  {
    name: "name",
    label: "Name",
    options: {
      filter: true,
      sort: true,
    },
  },
  {
    name: "email",
    label: "Email",
    options: {
      filter: true,
      sort: false,
    },
  },
  {
    name: "message",
    label: "Message",
    options: {
      filter: true,
      sort: false,
    },
  },
  {
    name: "delete",
    label: "Action",
    extra: true,
    custom: (val: string, meta: any) => {
      return  (
        <div className="gap-4 flex items-center justify-left">
          <BsReply onClick={() => router.push(`/admin/feedbacks/${meta?._id}`)} size="1.2rem" className="cursor-pointer" />
          <MdOutlineDelete onClick={() => deleteFeedbacks(meta?._id, `feedbacks/${meta?._id}`)} size="1.2rem" className="text-red-400 cursor-pointer" />
        </div>
      )
    },
  },
  
];

  useEffect(() => {
    const fetchFeedbacks = async () => {
      try {
        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/feedbacks`)
        const data = await res.json()
        
        if (!res.ok) throw new Error(data.message)

        console.log({data})
        setData(data)
      } catch (error) {
        console.log({error})
      }

    }

    fetchFeedbacks()
  }, [deleted])



  return (
    <AdminLayout>
        {(loading || posting) && <Loader modalOpen={true} />}
      <Head>
        <title>Brilliant Brains</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/faviconimg.png" />
      </Head>
      <div className='p-4 py-12 sm:px-12 h-full overflow-y-auto'>
        <h1 className='text-3xl text-black/70 font-argentinum  mb-12'>Feedbacks</h1>
        <Table<IFeedback> data={data} columns={columns} className={''} />
      </div>
    </AdminLayout>
  );
}


export default AuthHOC(Feedbacks)

