import { useEffect, useState } from 'react'
import Head from "next/head";
import AdminLayout from "@/layouts/AdminLayout"
import AuthHOC from '@/components/AuthHOC'
import Table from '@/components/Table'
import { IFaqs } from "@/interfaces"
import Button from '@/components/Button';
import { useRouter } from 'next/router';
import usePost from '@/hooks/usePost';
import { toast } from 'react-toastify';
import Loader from '@/components/Loader';
import { BiEdit } from 'react-icons/bi';
import { MdOutlineDelete } from 'react-icons/md';


const FaqsAdmin = () => {
  const [data, setData] = useState<IFaqs[]>([])
  const [loading, setLoading] = useState<boolean>(false)
  const router = useRouter()

  const { loading: posting, error, post, data: deleted } = usePost({ 
    api: "/faqs",
    method: "DELETE",
    onSuccess: () => {
        toast('Faq deleted successfully')
    } 
})

const deleteFaq = (id: string, route: string) => {
    post({
      id,
    }, route)
}




const colums = [
  {
    name: "question",
    label: "Question",
    options: {
      filter: true,
      sort: true,
    },
     extra: true,
    custom: (val: string, meta: any) => {
      return  (
          <p className="text-sm text-black/70">{val?.length < 40 ? val : val.slice(0, 40) + '...'}</p>
      )
    },
  },
  {
    name: "answer",
    label: "Answer",
    options: {
      filter: true,
      sort: false,
    },
    extra: true,
    custom: (val: string, meta: any) => {
      return  (
          <p className="text-sm text-black/70">{val?.length < 40 ? val : val.slice(0, 40) + '...'}</p>
      )
    },
  },
  {
    name: "delete",
    label: "Actions",
    extra: true,
    custom: (val: string, meta: any) => {
      return  (
        <div className="gap-4 flex items-center justify-left">
          <BiEdit onClick={() => router.push(`/admin/faqs/${meta?._id}`)} size="1.2rem" className="cursor-pointer" />
          {/* <button onClick={() => deleteFaq(meta?._id, `faqs/${meta?._id}`)} className="p-2 px-4 bg-red-600 text-white rounded-full">Delete</button> */}
          <MdOutlineDelete  onClick={() => deleteFaq(meta?._id, `faqs/${meta?._id}`)} size="1.2rem" className="text-red-400 cursor-pointer" />
        </div>
      )
    },
  },
];

  useEffect(() => {
    const fetchUser = async () => {
      try {
        setLoading(true)
        const res = await fetch(`/api/faqs`)
        const data = await res.json()
        
        if (!res.ok) throw new Error(data.message)

        console.log({data})
        setData(data)
      } catch (error) {
        console.log({error})
      }
      setLoading(false)
    }

    fetchUser()
  }, [deleted])

  return (
    <AdminLayout>
      <Head>
        <title>Brilliant Brains</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/faviconimg.png" />
      </Head>
      {(loading || posting) && <Loader modalOpen={true} />}
      <div className='p-4 py-12 sm:px-12 h-full overflow-y-auto'>
        <div className="flex items-center gap-4 justify-between mb-16">
            <h1 className='text-3xl text-black/70 font-argentinum'>Faqs</h1>
            <Button onClick={() => router.push("/admin/faqs/add")} className="text-white px-4 sm:px-6 py-2 rounded-xl text-sm whitespace-nowrap">Add Faq</Button>
        </div>
        <Table<IFaqs> data={data} columns={colums} className={''} />
      </div>
    </AdminLayout>
  );
}


export default AuthHOC(FaqsAdmin)

